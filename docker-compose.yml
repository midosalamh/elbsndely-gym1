version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: elbsndely_postgres
    environment:
      POSTGRES_DB: elbsndely_gym
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elbsndely_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: elbsndely_backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=elbsndely_gym
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=elbsndely_gym_super_secret_jwt_key_2024
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - elbsndely_network
    restart: unless-stopped

  # Frontend Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: elbsndely_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - elbsndely_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: elbsndely_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - elbsndely_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  elbsndely_network:
    driver: bridge
